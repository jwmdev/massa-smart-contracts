"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.decode = exports.encode = void 0;
const buffer_1 = require("buffer");
const hash_js_1 = require("hash.js");
const base_x_1 = require("@web3pack/base-x");
const base58Converter = (0, base_x_1.base58)();
const hash = (buffer) => {
    const hex = buffer.toString('hex');
    const result = (0, hash_js_1.sha256)().update(hex, 'hex').digest();
    return buffer_1.Buffer.from(result);
};
const makeChecksum = (buffer) => hash(hash(buffer));
// Encode a buffer as a base58-check encoded string
const encode = (payload) => {
    const checksum = makeChecksum(payload);
    return base58Converter.encode(buffer_1.Buffer.concat([payload, checksum], payload.length + 4));
};
exports.encode = encode;
const decode = (input) => {
    // decode input using base58
    const uint8 = base58Converter.decode(input);
    const buffer = buffer_1.Buffer.from(uint8);
    const payload = buffer.slice(0, -4);
    const checksum = buffer.slice(-4);
    const newChecksum = makeChecksum(payload);
    if ((checksum[0] ^ newChecksum[0]) |
        (checksum[1] ^ newChecksum[1]) |
        (checksum[2] ^ newChecksum[2]) |
        (checksum[3] ^ newChecksum[3]))
        throw new Error('Invalid checksum');
    return payload;
};
exports.decode = decode;
