{"ast":null,"code":"import * as unsigned from './unsigned';\n/**\n * @module Signed\n *\n * This module provides functions to encode and decode signed\n * integers using Varint, which is a compact binary representation of integers.\n */\nconst oneBI = BigInt(1);\nconst twoBI = BigInt(2);\n/**\n * Returns the number of bytes required to store the number.\n *\n * @privateRemarks\n * If the `value` is positive, it will be encoded as a positive value by multiplying it by 2.\n * If the `value` is negative, it will be encoded as a negative value by multiplying it by -2 and subtracting 1.\n *\n * @param value - The number to encode.\n *\n * @returns The number of bytes required to store the number.\n */\nexport function encodingLength(value) {\n  return unsigned.encodingLength(value >= 0 ? value * twoBI : value * -twoBI - oneBI);\n}\n/**\n * Encodes the given value into the given buffer at the given byteOffset.\n *\n * @param value - The value to encode.\n * @param buffer - The buffer to encode into (optional).\n * @param byteOffset - The byte offset to start encoding at (optional).\n *\n * @returns A buffer with the encoded value.\n */\nexport function encode(value, buffer, byteOffset) {\n  value = value >= 0 ? value * twoBI : value * -twoBI - oneBI;\n  return unsigned.encode(value, buffer, byteOffset);\n}\n/**\n * Decodes the given data at the given byteOffset.\n *\n * @param data - The data to decode.\n * @param offset - The byte offset to start decoding at (Default: 0).\n *\n * @returns The decoded value.\n */\nexport function decode(data, offset = 0) {\n  const value = unsigned.decode(data, offset);\n  return value & oneBI ? (value + oneBI) / -twoBI : value / twoBI;\n}","map":{"version":3,"names":["unsigned","oneBI","BigInt","twoBI","encodingLength","value","encode","buffer","byteOffset","decode","data","offset"],"sources":["../../../../src/utils/encode_decode_int/signed.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAO,KAAKA,QAAQ,MAAM,YAAY;AAEtC;;;;;;AAMA,MAAMC,KAAK,GAAGC,MAAM,CAAC,CAAC,CAAC;AACvB,MAAMC,KAAK,GAAGD,MAAM,CAAC,CAAC,CAAC;AAEvB;;;;;;;;;;;AAWA,OAAM,SAAUE,cAAcA,CAACC,KAAa;EAC1C,OAAOL,QAAQ,CAACI,cAAc,CAC5BC,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAGF,KAAK,GAAGE,KAAK,GAAG,CAACF,KAAK,GAAGF,KAAK,CACpD;AACH;AAEA;;;;;;;;;AASA,OAAM,SAAUK,MAAMA,CACpBD,KAAa,EACbE,MAAoB,EACpBC,UAAmB;EAEnBH,KAAK,GAAGA,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAGF,KAAK,GAAGE,KAAK,GAAG,CAACF,KAAK,GAAGF,KAAK;EAC3D,OAAOD,QAAQ,CAACM,MAAM,CAACD,KAAK,EAAEE,MAAM,EAAEC,UAAU,CAAC;AACnD;AAEA;;;;;;;;AAQA,OAAM,SAAUC,MAAMA,CAACC,IAAgB,EAAEC,MAAM,GAAG,CAAC;EACjD,MAAMN,KAAK,GAAGL,QAAQ,CAACS,MAAM,CAACC,IAAI,EAAEC,MAAM,CAAC;EAC3C,OAAON,KAAK,GAAGJ,KAAK,GAAG,CAACI,KAAK,GAAGJ,KAAK,IAAI,CAACE,KAAK,GAAGE,KAAK,GAAGF,KAAK;AACjE"},"metadata":{},"sourceType":"module","externalDependencies":[]}