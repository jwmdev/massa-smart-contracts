{"ast":null,"code":"import BigNumber from 'bignumber.js';\nconst MASSA_SCALING_FACTOR = 9;\n/**\n * Convert any value expressed in Massa back to nanoMassa (the smallest unit of Massa).\n * This function takes an input value in Massa and returns the equivalent value in nanoMassa.\n *\n * @remarks\n * Massa is a unit of currency and nanoMassa is a sub-unit, where 1 Massa equals 10^9 nanoMassa.\n * This function uses the BigNumber library to perform calculations with arbitrary precision.\n *\n * @param amountInMassa - The amount to convert, expressed in Massa. Can be a number, string, BigNumber, or bigint.\n *\n * @returns The amount expressed in nanoMassa, as a bigint.\n *\n * @example\n * ```\n * const nanoMassa = fromMAS(1); // returns 1000000000n\n * ```\n */\nexport const fromMAS = amountInMassa => {\n  const amount = new BigNumber(amountInMassa.toString());\n  const scaleFactor = new BigNumber(10).pow(new BigNumber(MASSA_SCALING_FACTOR));\n  const amountScaled = amount.times(scaleFactor);\n  return BigInt(amountScaled.toFixed(0));\n};\n/**\n * Convert any value expressed in nanoMassa back to Massa.\n * This function takes an input value in nanoMassa and returns the equivalent value in Massa.\n *\n * @remarks\n * Massa is a unit of currency and nanoMassa is a sub-unit, where 1 Massa equals 10^9 nanoMassa.\n * This function uses the BigNumber library to perform calculations with arbitrary precision.\n *\n * @param amountInNanoMassa - The amount to convert, expressed in nanoMassa. Can be a number, string, BigNumber, or bigint.\n *\n * @returns The amount expressed in Massa, as a BigNumber.\n *\n * @example\n * ```\n * const massa = toMAS(1000000000n); // returns new BigNumber(1)\n * ```\n */\nexport const toMAS = amountInNanoMassa => {\n  const amount = new BigNumber(amountInNanoMassa.toString());\n  const scaleFactor = new BigNumber(10).pow(new BigNumber(MASSA_SCALING_FACTOR));\n  const amountScaled = amount.dividedBy(scaleFactor);\n  return new BigNumber(amountScaled.toFixed(MASSA_SCALING_FACTOR));\n};\n/**\n * MassaUnits contains constants representing different magnitudes of the Massa currency.\n * This object provides useful constants for working with Massa and its sub-units.\n *\n * @remarks\n * MassaUnits contains the following properties:\n * - oneMassa: Represents 1 Massa in nanoMassa (10^9 nanoMassa).\n * - mMassa: Represents 1 milliMassa in nanoMassa (10^6 nanoMassa).\n * - uMassa: Represents 1 microMassa in nanoMassa (10^3 nanoMassa).\n *\n * @example\n * ```\n * const oneMassaInNano = MassaUnits.oneMassa; // returns 1000000000n\n * const oneMilliMassaInNano = MassaUnits.mMassa; // returns 1000000n\n * const oneMicroMassaInNano = MassaUnits.uMassa; // returns 1000n\n * ```\n */\nexport const MassaUnits = {\n  oneMassa: BigInt(10 ** 9),\n  mMassa: BigInt(10 ** 6),\n  uMassa: BigInt(10 ** 3)\n};","map":{"version":3,"names":["BigNumber","MASSA_SCALING_FACTOR","fromMAS","amountInMassa","amount","toString","scaleFactor","pow","amountScaled","times","BigInt","toFixed","toMAS","amountInNanoMassa","dividedBy","MassaUnits","oneMassa","mMassa","uMassa"],"sources":["../../../src/utils/converters.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,SAAS,MAAM,cAAc;AAEpC,MAAMC,oBAAoB,GAAG,CAAC;AAE9B;;;;;;;;;;;;;;;;;AAiBA,OAAO,MAAMC,OAAO,GAClBC,aAAmD,IACzC;EACV,MAAMC,MAAM,GAAG,IAAIJ,SAAS,CAACG,aAAa,CAACE,QAAQ,EAAE,CAAC;EACtD,MAAMC,WAAW,GAAG,IAAIN,SAAS,CAAC,EAAE,CAAC,CAACO,GAAG,CACvC,IAAIP,SAAS,CAACC,oBAAoB,CAAC,CACpC;EACD,MAAMO,YAAY,GAAGJ,MAAM,CAACK,KAAK,CAACH,WAAW,CAAC;EAC9C,OAAOI,MAAM,CAACF,YAAY,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC;AAED;;;;;;;;;;;;;;;;;AAiBA,OAAO,MAAMC,KAAK,GAChBC,iBAAuD,IAC1C;EACb,MAAMT,MAAM,GAAG,IAAIJ,SAAS,CAACa,iBAAiB,CAACR,QAAQ,EAAE,CAAC;EAC1D,MAAMC,WAAW,GAAG,IAAIN,SAAS,CAAC,EAAE,CAAC,CAACO,GAAG,CACvC,IAAIP,SAAS,CAACC,oBAAoB,CAAC,CACpC;EACD,MAAMO,YAAY,GAAGJ,MAAM,CAACU,SAAS,CAACR,WAAW,CAAC;EAClD,OAAO,IAAIN,SAAS,CAACQ,YAAY,CAACG,OAAO,CAACV,oBAAoB,CAAC,CAAC;AAClE,CAAC;AAED;;;;;;;;;;;;;;;;;AAiBA,OAAO,MAAMc,UAAU,GAAG;EACxBC,QAAQ,EAAEN,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;EACzBO,MAAM,EAAEP,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;EACvBQ,MAAM,EAAER,MAAM,CAAC,EAAE,IAAI,CAAC;CACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}