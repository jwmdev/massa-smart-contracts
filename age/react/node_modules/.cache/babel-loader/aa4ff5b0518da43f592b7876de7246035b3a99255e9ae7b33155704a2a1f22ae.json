{"ast":null,"code":"\"use strict\";\n\n/**\n * This file defines a TypeScript class named MassaStationDiscovery.\n * The class is being used to recursively search for a connection to MassaStation's server\n * and if so report this via emitting messages.\n *\n * @remarks\n * - If you are only looking to use our library, the connector MassaStationDiscovery will not be useful to you.\n * - If you want to work on this repo, you will probably be interested in this object\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MassaStationDiscovery = exports.ON_MASSA_STATION_DISCONNECTED = exports.ON_MASSA_STATION_DISCOVERED = exports.MASSA_STATION_DISCOVERY_URL = void 0;\nconst events_1 = require(\"events\");\nconst time_1 = require(\"../utils/time\");\nconst RequestHandler_1 = require(\"./RequestHandler\");\n/**\n * Url used for the MassaStation discovery and pinging the MassaStation server's index.html\n */\nexports.MASSA_STATION_DISCOVERY_URL = 'https://station.massa/web/index';\n/**\n * A message emitted on successful MassaStation discovery\n */\nexports.ON_MASSA_STATION_DISCOVERED = 'ON_MASSA_STATION_DISCOVERED';\n/**\n * A message emitted on MassaStation disconnect\n */\nexports.ON_MASSA_STATION_DISCONNECTED = 'ON_MASSA_STATION_DISCONNECTED';\n/**\n * This file defines a TypeScript class named MassaStation.\n * The class is being used to recursively ping MassaStation's server\n * and if a response is received emit a message so MassaStation can be enlisted as\n * a wallet provider in the `Connector` class.\n */\nclass MassaStationDiscovery extends events_1.EventEmitter {\n  /**\n   * MassaStation constructor\n   *\n   * @param pollIntervalMillis - Polling interval defined in milliseconds\n   *\n   * @remarks\n   * - It creates a timeout using the given `pollIntervalMillis` argument on every trigger of which\n   *  the MassaStation pinging is triggered and if a successful response is fetched,\n   * a message `ON_MASSA_STATION_DISCOVERED` is emitted that MassaStation has been discovered\n   * as a wallet provider upon which the `Connector` class will enlist MassaStation as a wallet provider\n   * - If once found, but then disconnected the following message `ON_MASSA_STATION_DISCONNECTED` is being emitted\n   *  so that the `Connector` class delists MassaStation as a wallet provider\n   *\n   * @returns An instance of the MassaStation class.\n   *\n   */\n  constructor(pollIntervalMillis) {\n    super();\n    this.pollIntervalMillis = pollIntervalMillis;\n    this.timeoutId = null;\n    this.isDiscovered = false;\n    // bind class methods\n    this.callback = this.callback.bind(this);\n    this.stopListening = this.stopListening.bind(this);\n    this.startListening = this.startListening.bind(this);\n  }\n  /**\n   * A callback method that triggers a ping of the MassaStation's server\n   *\n   * @returns void\n   */\n  async callback() {\n    let resp = null;\n    try {\n      resp = await (0, RequestHandler_1.getRequest)(exports.MASSA_STATION_DISCOVERY_URL);\n    } catch (ex) {\n      console.error(`Error calling ${exports.MASSA_STATION_DISCOVERY_URL}`);\n    }\n    if (!resp.isError && !resp.error) {\n      this.isDiscovered = true;\n      this.emit(exports.ON_MASSA_STATION_DISCOVERED);\n    }\n    if ((resp.isError || resp.error) && this.isDiscovered) {\n      this.emit(exports.ON_MASSA_STATION_DISCONNECTED);\n    }\n  }\n  /**\n   * A method to stop listening for a connection to MassaStation's server\n   *\n   * @returns void\n   */\n  stopListening() {\n    if (this.timeoutId) this.timeoutId.clear();\n  }\n  /**\n   * A method to start listening for a connection to MassaStation's server.\n   *\n   * @returns void\n   */\n  startListening() {\n    const that = this;\n    if (this.timeoutId) {\n      return;\n    }\n    this.timeoutId = new time_1.Timeout(this.pollIntervalMillis, () => that.callback());\n  }\n}\nexports.MassaStationDiscovery = MassaStationDiscovery;","map":{"version":3,"names":["Object","defineProperty","exports","value","MassaStationDiscovery","ON_MASSA_STATION_DISCONNECTED","ON_MASSA_STATION_DISCOVERED","MASSA_STATION_DISCOVERY_URL","events_1","require","time_1","RequestHandler_1","EventEmitter","constructor","pollIntervalMillis","timeoutId","isDiscovered","callback","bind","stopListening","startListening","resp","getRequest","ex","console","error","isError","emit","clear","that","Timeout"],"sources":["/Users/jwmdev/Development/github/massa/massa-sc-examples/age/react/node_modules/@massalabs/wallet-provider/dist/massaStation/MassaStationDiscovery.js"],"sourcesContent":["\"use strict\";\n/**\n * This file defines a TypeScript class named MassaStationDiscovery.\n * The class is being used to recursively search for a connection to MassaStation's server\n * and if so report this via emitting messages.\n *\n * @remarks\n * - If you are only looking to use our library, the connector MassaStationDiscovery will not be useful to you.\n * - If you want to work on this repo, you will probably be interested in this object\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MassaStationDiscovery = exports.ON_MASSA_STATION_DISCONNECTED = exports.ON_MASSA_STATION_DISCOVERED = exports.MASSA_STATION_DISCOVERY_URL = void 0;\nconst events_1 = require(\"events\");\nconst time_1 = require(\"../utils/time\");\nconst RequestHandler_1 = require(\"./RequestHandler\");\n/**\n * Url used for the MassaStation discovery and pinging the MassaStation server's index.html\n */\nexports.MASSA_STATION_DISCOVERY_URL = 'https://station.massa/web/index';\n/**\n * A message emitted on successful MassaStation discovery\n */\nexports.ON_MASSA_STATION_DISCOVERED = 'ON_MASSA_STATION_DISCOVERED';\n/**\n * A message emitted on MassaStation disconnect\n */\nexports.ON_MASSA_STATION_DISCONNECTED = 'ON_MASSA_STATION_DISCONNECTED';\n/**\n * This file defines a TypeScript class named MassaStation.\n * The class is being used to recursively ping MassaStation's server\n * and if a response is received emit a message so MassaStation can be enlisted as\n * a wallet provider in the `Connector` class.\n */\nclass MassaStationDiscovery extends events_1.EventEmitter {\n    /**\n     * MassaStation constructor\n     *\n     * @param pollIntervalMillis - Polling interval defined in milliseconds\n     *\n     * @remarks\n     * - It creates a timeout using the given `pollIntervalMillis` argument on every trigger of which\n     *  the MassaStation pinging is triggered and if a successful response is fetched,\n     * a message `ON_MASSA_STATION_DISCOVERED` is emitted that MassaStation has been discovered\n     * as a wallet provider upon which the `Connector` class will enlist MassaStation as a wallet provider\n     * - If once found, but then disconnected the following message `ON_MASSA_STATION_DISCONNECTED` is being emitted\n     *  so that the `Connector` class delists MassaStation as a wallet provider\n     *\n     * @returns An instance of the MassaStation class.\n     *\n     */\n    constructor(pollIntervalMillis) {\n        super();\n        this.pollIntervalMillis = pollIntervalMillis;\n        this.timeoutId = null;\n        this.isDiscovered = false;\n        // bind class methods\n        this.callback = this.callback.bind(this);\n        this.stopListening = this.stopListening.bind(this);\n        this.startListening = this.startListening.bind(this);\n    }\n    /**\n     * A callback method that triggers a ping of the MassaStation's server\n     *\n     * @returns void\n     */\n    async callback() {\n        let resp = null;\n        try {\n            resp = await (0, RequestHandler_1.getRequest)(exports.MASSA_STATION_DISCOVERY_URL);\n        }\n        catch (ex) {\n            console.error(`Error calling ${exports.MASSA_STATION_DISCOVERY_URL}`);\n        }\n        if (!resp.isError && !resp.error) {\n            this.isDiscovered = true;\n            this.emit(exports.ON_MASSA_STATION_DISCOVERED);\n        }\n        if ((resp.isError || resp.error) && this.isDiscovered) {\n            this.emit(exports.ON_MASSA_STATION_DISCONNECTED);\n        }\n    }\n    /**\n     * A method to stop listening for a connection to MassaStation's server\n     *\n     * @returns void\n     */\n    stopListening() {\n        if (this.timeoutId)\n            this.timeoutId.clear();\n    }\n    /**\n     * A method to start listening for a connection to MassaStation's server.\n     *\n     * @returns void\n     */\n    startListening() {\n        const that = this;\n        if (this.timeoutId) {\n            return;\n        }\n        this.timeoutId = new time_1.Timeout(this.pollIntervalMillis, () => that.callback());\n    }\n}\nexports.MassaStationDiscovery = MassaStationDiscovery;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}