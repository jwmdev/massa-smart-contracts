{"ast":null,"code":"\"use strict\";\n\n/**\n * This file defines a TypeScript module with various time-related Typescript methods.\n *\n * @remarks\n * - The classes and their methods implemented here are quite generic and might be useful in other contexts too\n *  but have been particularly developed for the purposes of this library\n * - If you want to work on this repo, you will probably be interested in this object\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withTimeoutRejection = exports.wait = exports.Interval = exports.Timeout = void 0;\n/**\n * This class provides an implementation of a timer calling a callback hook after it ticks.\n * @remarks\n * The timer is being resetted only after the execution of the callback method has finished\n */\nclass Timeout {\n  /**\n   * Timeout constructor\n   *\n   * @param timeoutMil - The number of milliseconds for the timeout.\n   * @param callback - a callback to execute.\n   * @returns An instance of the Timeout class.\n   */\n  constructor(timeoutMil, callback) {\n    this.clear = this.clear.bind(this);\n    const that = this;\n    this.isCleared = false;\n    this.isCalled = false;\n    this.timeoutHook = setTimeout(() => {\n      if (!that.isCleared) {\n        this.isCalled = true;\n        callback();\n      }\n    }, timeoutMil);\n  }\n  /**\n   * A method to clear the timeout\n   *\n   * @returns void\n   */\n  clear() {\n    if (!this.isCleared) {\n      clearTimeout(this.timeoutHook);\n      this.isCleared = true;\n    }\n  }\n}\nexports.Timeout = Timeout;\n/**\n * This class provides an implementation of a continuous timer calling a callback hook after every given milliseconds.\n * @remarks\n * The timer is being resetted every given milliseconds\n * irregardless whether the execution of the method is still running or not\n */\nclass Interval {\n  /**\n   * Interval constructor\n   *\n   * @param timeoutMil - The number of milliseconds for the interval.\n   * @param callback - a callback to execute.\n   * @returns An instance of the Interval class.\n   */\n  constructor(timeoutMil, callback) {\n    this.clear = this.clear.bind(this);\n    const that = this;\n    this.isCleared = false;\n    this.isCalled = false;\n    this.intervalHook = setInterval(() => {\n      if (!that.isCleared) {\n        this.isCalled = true;\n        callback();\n      }\n    }, timeoutMil);\n  }\n  /**\n   * A method to clear the interval\n   *\n   * @returns void\n   */\n  clear() {\n    if (!this.isCleared) {\n      clearInterval(this.intervalHook);\n      this.isCleared = true;\n    }\n  }\n}\nexports.Interval = Interval;\n/**\n * A function that waits pauses the execution loop for a number of milliseconds\n *\n * @param timeMilli - The number of milliseconds to wait.\n * @returns void\n */\nconst wait = async timeMilli => {\n  return new Promise((resolve, reject) => {\n    const timeout = new Timeout(timeMilli, () => {\n      timeout.clear();\n      return resolve();\n    });\n  });\n};\nexports.wait = wait;\n/**\n * A function that awaits a promise with a timeout.\n *\n * @param promise - a promise to execute.\n * @param timeoutMs - The number of milliseconds to wait before a timeout.\n * @returns void\n *\n * @remarks\n * The promise is being polled with a timeout. Once the timeout is reached, if not fulfilled, the error is thrown.\n */\nasync function withTimeoutRejection(promise, timeoutMs) {\n  const sleep = new Promise((resolve, reject) => setTimeout(() => reject(new Error(`Timeout of ${timeoutMs} has passed and promise did not resolve`)), timeoutMs));\n  return Promise.race([promise, sleep]);\n}\nexports.withTimeoutRejection = withTimeoutRejection;","map":{"version":3,"names":["Object","defineProperty","exports","value","withTimeoutRejection","wait","Interval","Timeout","constructor","timeoutMil","callback","clear","bind","that","isCleared","isCalled","timeoutHook","setTimeout","clearTimeout","intervalHook","setInterval","clearInterval","timeMilli","Promise","resolve","reject","timeout","promise","timeoutMs","sleep","Error","race"],"sources":["/Users/jwmdev/Development/github/massa/massa-sc-examples/age/react/node_modules/@massalabs/wallet-provider/dist/utils/time.js"],"sourcesContent":["\"use strict\";\n/**\n * This file defines a TypeScript module with various time-related Typescript methods.\n *\n * @remarks\n * - The classes and their methods implemented here are quite generic and might be useful in other contexts too\n *  but have been particularly developed for the purposes of this library\n * - If you want to work on this repo, you will probably be interested in this object\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withTimeoutRejection = exports.wait = exports.Interval = exports.Timeout = void 0;\n/**\n * This class provides an implementation of a timer calling a callback hook after it ticks.\n * @remarks\n * The timer is being resetted only after the execution of the callback method has finished\n */\nclass Timeout {\n    /**\n     * Timeout constructor\n     *\n     * @param timeoutMil - The number of milliseconds for the timeout.\n     * @param callback - a callback to execute.\n     * @returns An instance of the Timeout class.\n     */\n    constructor(timeoutMil, callback) {\n        this.clear = this.clear.bind(this);\n        const that = this;\n        this.isCleared = false;\n        this.isCalled = false;\n        this.timeoutHook = setTimeout(() => {\n            if (!that.isCleared) {\n                this.isCalled = true;\n                callback();\n            }\n        }, timeoutMil);\n    }\n    /**\n     * A method to clear the timeout\n     *\n     * @returns void\n     */\n    clear() {\n        if (!this.isCleared) {\n            clearTimeout(this.timeoutHook);\n            this.isCleared = true;\n        }\n    }\n}\nexports.Timeout = Timeout;\n/**\n * This class provides an implementation of a continuous timer calling a callback hook after every given milliseconds.\n * @remarks\n * The timer is being resetted every given milliseconds\n * irregardless whether the execution of the method is still running or not\n */\nclass Interval {\n    /**\n     * Interval constructor\n     *\n     * @param timeoutMil - The number of milliseconds for the interval.\n     * @param callback - a callback to execute.\n     * @returns An instance of the Interval class.\n     */\n    constructor(timeoutMil, callback) {\n        this.clear = this.clear.bind(this);\n        const that = this;\n        this.isCleared = false;\n        this.isCalled = false;\n        this.intervalHook = setInterval(() => {\n            if (!that.isCleared) {\n                this.isCalled = true;\n                callback();\n            }\n        }, timeoutMil);\n    }\n    /**\n     * A method to clear the interval\n     *\n     * @returns void\n     */\n    clear() {\n        if (!this.isCleared) {\n            clearInterval(this.intervalHook);\n            this.isCleared = true;\n        }\n    }\n}\nexports.Interval = Interval;\n/**\n * A function that waits pauses the execution loop for a number of milliseconds\n *\n * @param timeMilli - The number of milliseconds to wait.\n * @returns void\n */\nconst wait = async (timeMilli) => {\n    return new Promise((resolve, reject) => {\n        const timeout = new Timeout(timeMilli, () => {\n            timeout.clear();\n            return resolve();\n        });\n    });\n};\nexports.wait = wait;\n/**\n * A function that awaits a promise with a timeout.\n *\n * @param promise - a promise to execute.\n * @param timeoutMs - The number of milliseconds to wait before a timeout.\n * @returns void\n *\n * @remarks\n * The promise is being polled with a timeout. Once the timeout is reached, if not fulfilled, the error is thrown.\n */\nasync function withTimeoutRejection(promise, timeoutMs) {\n    const sleep = new Promise((resolve, reject) => setTimeout(() => reject(new Error(`Timeout of ${timeoutMs} has passed and promise did not resolve`)), timeoutMs));\n    return Promise.race([promise, sleep]);\n}\nexports.withTimeoutRejection = withTimeoutRejection;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}