{"ast":null,"code":"import { base58Encode } from '../../utils/Xbqcrypto';\nexport class WalletProviderAccount {\n  account;\n  constructor(account) {\n    this.account = account;\n  }\n  async sign(data) {\n    let bytes_signature = (await this.account.sign(data)).signature;\n    const base58Encoded = base58Encode(bytes_signature);\n    return {\n      base58Encoded\n    };\n  }\n  address() {\n    return this.account.address();\n  }\n  async sellRolls(rollsData) {\n    let res = await this.account.sellRolls(rollsData.amount, rollsData.fee);\n    return res.operationId;\n  }\n  async buyRolls(rollsData) {\n    let res = await this.account.buyRolls(rollsData.amount, rollsData.fee);\n    return res.operationId;\n  }\n  async sendTransaction(txData) {\n    let res = await this.account.sendTransaction(txData.amount, txData.recipientAddress, txData.fee);\n    return res.operationId;\n  }\n  async callSmartContract(callData) {\n    let res = await this.account.callSC(callData.targetAddress, callData.functionName, new Uint8Array(callData.parameter), callData.coins, callData.fee, callData.maxGas, false);\n    return res.operationId;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async deploySmartContract(_) {\n    throw new Error('deploySmartContract with an account from WalletProvider is not implemented yet.');\n  }\n  async verify() {\n    return;\n  }\n}","map":{"version":3,"names":["base58Encode","WalletProviderAccount","account","constructor","sign","data","bytes_signature","signature","base58Encoded","address","sellRolls","rollsData","res","amount","fee","operationId","buyRolls","sendTransaction","txData","recipientAddress","callSmartContract","callData","callSC","targetAddress","functionName","Uint8Array","parameter","coins","maxGas","deploySmartContract","_","Error","verify"],"sources":["../../../../src/web3/accounts/WalletProviderAccount.ts"],"sourcesContent":[null],"mappings":"AAEA,SAASA,YAAY,QAAQ,uBAAuB;AAOpD,OAAM,MAAOC,qBAAqB;EACxBC,OAAO;EACfC,YAAYD,OAAiB;IAC3B,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAEO,MAAME,IAAIA,CAACC,IAAY;IAC5B,IAAIC,eAAe,GAAG,CAAC,MAAM,IAAI,CAACJ,OAAO,CAACE,IAAI,CAACC,IAAI,CAAC,EAAEE,SAAS;IAC/D,MAAMC,aAAa,GAAGR,YAAY,CAACM,eAAe,CAAC;IACnD,OAAO;MACLE;KACD;EACH;EAEOC,OAAOA,CAAA;IACZ,OAAO,IAAI,CAACP,OAAO,CAACO,OAAO,EAAE;EAC/B;EAEO,MAAMC,SAASA,CAACC,SAAqB;IAC1C,IAAIC,GAAG,GAAG,MAAM,IAAI,CAACV,OAAO,CAACQ,SAAS,CAACC,SAAS,CAACE,MAAM,EAAEF,SAAS,CAACG,GAAG,CAAC;IACvE,OAAOF,GAAG,CAACG,WAAW;EACxB;EAEO,MAAMC,QAAQA,CAACL,SAAqB;IACzC,IAAIC,GAAG,GAAG,MAAM,IAAI,CAACV,OAAO,CAACc,QAAQ,CAACL,SAAS,CAACE,MAAM,EAAEF,SAAS,CAACG,GAAG,CAAC;IACtE,OAAOF,GAAG,CAACG,WAAW;EACxB;EAEO,MAAME,eAAeA,CAACC,MAAwB;IACnD,IAAIN,GAAG,GAAG,MAAM,IAAI,CAACV,OAAO,CAACe,eAAe,CAC1CC,MAAM,CAACL,MAAM,EACbK,MAAM,CAACC,gBAAgB,EACvBD,MAAM,CAACJ,GAAG,CACX;IACD,OAAOF,GAAG,CAACG,WAAW;EACxB;EAEO,MAAMK,iBAAiBA,CAACC,QAAmB;IAChD,IAAIT,GAAG,GAAG,MAAM,IAAI,CAACV,OAAO,CAACoB,MAAM,CACjCD,QAAQ,CAACE,aAAa,EACtBF,QAAQ,CAACG,YAAY,EACrB,IAAIC,UAAU,CAACJ,QAAQ,CAACK,SAAS,CAAC,EAClCL,QAAQ,CAACM,KAAK,EACdN,QAAQ,CAACP,GAAG,EACZO,QAAQ,CAACO,MAAM,EACf,KAAK,CACN;IACD,OAAOhB,GAAG,CAACG,WAAW;EACxB;EAEA;EACO,MAAMc,mBAAmBA,CAACC,CAAgB;IAC/C,MAAM,IAAIC,KAAK,CACb,iFAAiF,CAClF;EACH;EAEO,MAAMC,MAAMA,CAAA;IACjB;EACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}