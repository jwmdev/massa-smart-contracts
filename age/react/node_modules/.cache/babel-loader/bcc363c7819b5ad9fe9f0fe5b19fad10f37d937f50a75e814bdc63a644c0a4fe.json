{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.putRequest = exports.deleteRequest = exports.postRequest = exports.getRequest = void 0;\n/**\n * This file defines a TypeScript module with methods for performing GET, POST and DELETE http requests.\n *\n * @remarks\n * - The methods implemented here are quite generic and might be useful in other contexts too\n *  but have been particularly developed for making http calls specific to MassaStation's server API\n * - If you want to work on this repo, you will probably be interested in this object\n *\n */\nconst axios_1 = require(\"axios\");\nconst requestHeaders = {\n  Accept: 'application/json,text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Credentials': true,\n  'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n  'Content-Type': 'application/json',\n  'Access-Control-Allow-Headers': 'Accept,authorization,Authorization,Content-Type'\n};\n/**\n * This method makes a GET request to an http rest point.\n *\n *\n * @param url - The url to call.\n * @returns a Promise that resolves to an instance of JsonRpcResponseData.\n *\n */\nasync function getRequest(url) {\n  let resp = null;\n  try {\n    resp = await axios_1.default.get(url, requestHeaders);\n  } catch (ex) {\n    return {\n      isError: true,\n      result: null,\n      error: new Error('Axios Error: ' + String(ex))\n    };\n  }\n  return {\n    isError: false,\n    result: resp.data,\n    error: null\n  };\n}\nexports.getRequest = getRequest;\n/**\n * This method makes a POST request to an http rest point.\n *\n *\n * @param url - The url to call.\n * @param body - The body of the request.\n * @returns a Promise that resolves to an instance of JsonRpcResponseData.\n *\n */\nasync function postRequest(url, body) {\n  try {\n    const resp = await axios_1.default.post(url, body, requestHeaders);\n    return {\n      isError: false,\n      result: resp.data,\n      error: null\n    };\n  } catch (ex) {\n    return {\n      isError: true,\n      result: null,\n      error: ex.response?.data?.message ? new Error(String(ex.response.data.message)) : new Error('Axios error: ' + String(ex))\n    };\n  }\n}\nexports.postRequest = postRequest;\n/**\n * This method makes a DELETE request to an http rest point.\n *\n *\n * @param url - The url to call.\n * @returns a Promise that resolves to an instance of JsonRpcResponseData.\n *\n */\nasync function deleteRequest(url) {\n  let resp = null;\n  try {\n    resp = await axios_1.default.delete(url, requestHeaders);\n  } catch (ex) {\n    return {\n      isError: true,\n      result: null,\n      error: new Error('Axios Error: ' + String(ex))\n    };\n  }\n  return {\n    isError: false,\n    result: resp.data,\n    error: null\n  };\n}\nexports.deleteRequest = deleteRequest;\n/**\n * This method makes a PUT request to an http rest point.\n *\n *\n * @param url - The url to call.\n * @param body - The body of the request.\n * @returns a Promise that resolves to an instance of JsonRpcResponseData.\n *\n */\nasync function putRequest(url, body) {\n  let resp = null;\n  try {\n    resp = await axios_1.default.put(url, body, requestHeaders);\n  } catch (ex) {\n    return {\n      isError: true,\n      result: null,\n      error: new Error('Axios error: ' + String(ex))\n    };\n  }\n  return {\n    isError: false,\n    result: resp.data,\n    error: null\n  };\n}\nexports.putRequest = putRequest;","map":{"version":3,"names":["Object","defineProperty","exports","value","putRequest","deleteRequest","postRequest","getRequest","axios_1","require","requestHeaders","Accept","url","resp","default","get","ex","isError","result","error","Error","String","data","body","post","response","message","delete","put"],"sources":["/Users/jwmdev/Development/github/massa/massa-sc-examples/age/react/node_modules/@massalabs/wallet-provider/dist/massaStation/RequestHandler.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.putRequest = exports.deleteRequest = exports.postRequest = exports.getRequest = void 0;\n/**\n * This file defines a TypeScript module with methods for performing GET, POST and DELETE http requests.\n *\n * @remarks\n * - The methods implemented here are quite generic and might be useful in other contexts too\n *  but have been particularly developed for making http calls specific to MassaStation's server API\n * - If you want to work on this repo, you will probably be interested in this object\n *\n */\nconst axios_1 = require(\"axios\");\nconst requestHeaders = {\n    Accept: 'application/json,text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Credentials': true,\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Headers': 'Accept,authorization,Authorization,Content-Type',\n};\n/**\n * This method makes a GET request to an http rest point.\n *\n *\n * @param url - The url to call.\n * @returns a Promise that resolves to an instance of JsonRpcResponseData.\n *\n */\nasync function getRequest(url) {\n    let resp = null;\n    try {\n        resp = await axios_1.default.get(url, requestHeaders);\n    }\n    catch (ex) {\n        return {\n            isError: true,\n            result: null,\n            error: new Error('Axios Error: ' + String(ex)),\n        };\n    }\n    return {\n        isError: false,\n        result: resp.data,\n        error: null,\n    };\n}\nexports.getRequest = getRequest;\n/**\n * This method makes a POST request to an http rest point.\n *\n *\n * @param url - The url to call.\n * @param body - The body of the request.\n * @returns a Promise that resolves to an instance of JsonRpcResponseData.\n *\n */\nasync function postRequest(url, body) {\n    try {\n        const resp = await axios_1.default.post(url, body, requestHeaders);\n        return {\n            isError: false,\n            result: resp.data,\n            error: null,\n        };\n    }\n    catch (ex) {\n        return {\n            isError: true,\n            result: null,\n            error: ex.response?.data?.message\n                ? new Error(String(ex.response.data.message))\n                : new Error('Axios error: ' + String(ex)),\n        };\n    }\n}\nexports.postRequest = postRequest;\n/**\n * This method makes a DELETE request to an http rest point.\n *\n *\n * @param url - The url to call.\n * @returns a Promise that resolves to an instance of JsonRpcResponseData.\n *\n */\nasync function deleteRequest(url) {\n    let resp = null;\n    try {\n        resp = await axios_1.default.delete(url, requestHeaders);\n    }\n    catch (ex) {\n        return {\n            isError: true,\n            result: null,\n            error: new Error('Axios Error: ' + String(ex)),\n        };\n    }\n    return {\n        isError: false,\n        result: resp.data,\n        error: null,\n    };\n}\nexports.deleteRequest = deleteRequest;\n/**\n * This method makes a PUT request to an http rest point.\n *\n *\n * @param url - The url to call.\n * @param body - The body of the request.\n * @returns a Promise that resolves to an instance of JsonRpcResponseData.\n *\n */\nasync function putRequest(url, body) {\n    let resp = null;\n    try {\n        resp = await axios_1.default.put(url, body, requestHeaders);\n    }\n    catch (ex) {\n        return {\n            isError: true,\n            result: null,\n            error: new Error('Axios error: ' + String(ex)),\n        };\n    }\n    return {\n        isError: false,\n        result: resp.data,\n        error: null,\n    };\n}\nexports.putRequest = putRequest;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}