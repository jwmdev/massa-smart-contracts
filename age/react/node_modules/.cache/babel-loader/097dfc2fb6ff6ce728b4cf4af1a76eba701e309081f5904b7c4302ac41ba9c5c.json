{"ast":null,"code":"import { PrivateApiClient } from './PrivateApiClient';\nimport { PublicApiClient } from './PublicApiClient';\nimport { WalletClient } from './WalletClient';\nimport { SmartContractsClient } from './SmartContractsClient';\nimport { ProviderType } from '../interfaces/IProvider';\n/**\n * Massa Web3 Client object wraps all public, private, wallet and smart-contracts-related functionalities.\n */\nexport class Client {\n  clientConfig;\n  publicApiClient;\n  privateApiClient;\n  walletClient;\n  smartContractsClient;\n  /**\n   * Constructor of the Client class.\n   *\n   * @param clientConfig - client configuration object.\n   * @param baseAccount - base account to use for signing transactions (optional).\n   */\n  constructor(clientConfig, baseAccount, publicApiClient) {\n    this.clientConfig = clientConfig;\n    this.publicApiClient = publicApiClient || new PublicApiClient(clientConfig);\n    this.privateApiClient = new PrivateApiClient(clientConfig);\n    this.walletClient = new WalletClient(clientConfig, this.publicApiClient, baseAccount);\n    this.smartContractsClient = new SmartContractsClient(clientConfig, this.publicApiClient, this.walletClient);\n    // subclients\n    this.privateApi = this.privateApi.bind(this);\n    this.publicApi = this.publicApi.bind(this);\n    this.wallet = this.wallet.bind(this);\n    this.smartContracts = this.smartContracts.bind(this);\n    // setters\n    this.setCustomProviders = this.setCustomProviders.bind(this);\n    this.setNewDefaultProvider = this.setNewDefaultProvider.bind(this);\n    // getters\n    this.getProviders = this.getProviders.bind(this);\n    this.getPrivateProviders = this.getPrivateProviders.bind(this);\n    this.getPublicProviders = this.getPublicProviders.bind(this);\n  }\n  /**\n   * Get the private api related RPC methods.\n   *\n   * @returns PrivateApiClient object.\n   */\n  privateApi() {\n    return this.privateApiClient;\n  }\n  /**\n   * Get the public api related RPC methods.\n   *\n   * @returns PublicApiClient object.\n   */\n  publicApi() {\n    return this.publicApiClient;\n  }\n  /**\n   * Get the Wallet related methods.\n   *\n   * @returns WalletClient object.\n   */\n  wallet() {\n    return this.walletClient;\n  }\n  /**\n   * Get the smart Contracts related methods.\n   *\n   * @returns SmartContractsClient object.\n   */\n  smartContracts() {\n    return this.smartContractsClient;\n  }\n  /**\n   * Set new providers.\n   *\n   * @param providers - array of providers to set.\n   */\n  setCustomProviders(providers) {\n    this.publicApiClient.setProviders(providers);\n    this.privateApiClient.setProviders(providers);\n    this.walletClient.setProviders(providers);\n    this.smartContractsClient.setProviders(providers);\n  }\n  /**\n   * Get the currently set providers.\n   *\n   * @returns array of the known providers.\n   */\n  getProviders() {\n    return this.clientConfig.providers;\n  }\n  /**\n   * Get all private providers.\n   *\n   * @returns all private providers.\n   */\n  getPrivateProviders() {\n    return this.clientConfig.providers.filter(provider => provider.type === ProviderType.PRIVATE);\n  }\n  /**\n   * Get all public providers\n   *\n   * @returns all public providers\n   */\n  getPublicProviders() {\n    return this.clientConfig.providers.filter(provider => provider.type === ProviderType.PUBLIC);\n  }\n  /**\n   * Set a new default json rpc provider.\n   *\n   * @param provider - The new default provider to set.\n   */\n  setNewDefaultProvider(provider) {\n    const providers = [{\n      url: provider,\n      type: ProviderType.PUBLIC\n    }, {\n      url: provider,\n      type: ProviderType.PRIVATE\n    }];\n    this.publicApiClient.setProviders(providers);\n    this.privateApiClient.setProviders(providers);\n    this.walletClient.setProviders(providers);\n    this.smartContractsClient.setProviders(providers);\n  }\n}","map":{"version":3,"names":["PrivateApiClient","PublicApiClient","WalletClient","SmartContractsClient","ProviderType","Client","clientConfig","publicApiClient","privateApiClient","walletClient","smartContractsClient","constructor","baseAccount","privateApi","bind","publicApi","wallet","smartContracts","setCustomProviders","setNewDefaultProvider","getProviders","getPrivateProviders","getPublicProviders","providers","setProviders","filter","provider","type","PRIVATE","PUBLIC","url"],"sources":["../../../src/web3/Client.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}