{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MassaStationAccount = exports.Provider = exports.EAccountImportResponse = exports.EAccountDeletionResponse = exports.Account = exports.registerProvider = exports.providers = exports.AvailableCommands = void 0;\n/** Polyfills */\nconst buffer_1 = require(\"buffer\");\n// Check if we are on browser\nif (typeof window !== 'undefined') {\n  window.Buffer = buffer_1.Buffer;\n}\nconst Connector_1 = require(\"./connector/Connector\");\nconst Provider_1 = require(\"./provider/Provider\");\nconst MassaStationProvider_1 = require(\"./massaStation/MassaStationProvider\");\nvar AvailableCommands;\n(function (AvailableCommands) {\n  AvailableCommands[\"ProviderListAccounts\"] = \"LIST_ACCOUNTS\";\n  AvailableCommands[\"ProviderDeleteAccount\"] = \"DELETE_ACCOUNT\";\n  AvailableCommands[\"ProviderImportAccount\"] = \"IMPORT_ACCOUNT\";\n  AvailableCommands[\"ProviderGetNodesUrls\"] = \"GET_NODES_URLS\";\n  AvailableCommands[\"AccountBalance\"] = \"ACCOUNT_BALANCE\";\n  AvailableCommands[\"AccountSign\"] = \"ACCOUNT_SIGN\";\n  AvailableCommands[\"ProviderGenerateNewAccount\"] = \"GENERATE_NEW_ACCOUNT\";\n  AvailableCommands[\"AccountSellRolls\"] = \"ACCOUNT_SELL_ROLLS\";\n  AvailableCommands[\"AccountBuyRolls\"] = \"ACCOUNT_BUY_ROLLS\";\n  AvailableCommands[\"AccountSendTransaction\"] = \"ACCOUNT_SEND_TRANSACTION\";\n  AvailableCommands[\"AccountCallSC\"] = \"ACCOUNT_CALL_SC\";\n})(AvailableCommands = exports.AvailableCommands || (exports.AvailableCommands = {}));\n/**\n * Get the list of providers that are available to interact with.\n *\n * @param retry - If true, will retry to get the list of providers if none are available.\n * @param pollInterval - The timeout in milliseconds to wait between retries. default is 2000ms.\n * @param timeout - The timeout in milliseconds to wait before giving up. default is 3000ms.\n *\n * @returns An array of providers.\n */\nasync function providers(retry = true, timeout = 3000, pollInterval = 500) {\n  if (timeout <= 0) {\n    return [];\n  }\n  return new Promise(resolve => {\n    let provider = [];\n    for (const providerName of Object.keys(Connector_1.connector.getWalletProviders())) {\n      if (providerName === MassaStationProvider_1.MASSA_STATION_PROVIDER_NAME) {\n        const p = new MassaStationProvider_1.MassaStationProvider();\n        provider.push(p);\n      } else {\n        const p = new Provider_1.Provider(providerName);\n        provider.push(p);\n      }\n    }\n    // If no providers are available, wait and try again\n    if (retry && provider.length === 0) {\n      setTimeout(() => {\n        providers(retry, timeout - pollInterval, pollInterval).then(resolve);\n      }, pollInterval);\n    } else {\n      resolve(provider);\n    }\n  });\n}\nexports.providers = providers;\n/**\n * Manually register a provider to interact with.\n *\n * @param name - The name of the provider.\n * @param id - The id of the HTML element that is used to communicate with the provider.\n */\nfunction registerProvider(name, id = Connector_1.MASSA_WINDOW_OBJECT) {\n  const registerEvent = new CustomEvent('register', {\n    detail: {\n      providerName: name\n    }\n  });\n  const element = document.getElementById(id);\n  if (element) {\n    element.dispatchEvent(registerEvent);\n  }\n}\nexports.registerProvider = registerProvider;\nvar account_1 = require(\"./account\");\nObject.defineProperty(exports, \"Account\", {\n  enumerable: true,\n  get: function () {\n    return account_1.Account;\n  }\n});\nvar provider_1 = require(\"./provider\");\nObject.defineProperty(exports, \"EAccountDeletionResponse\", {\n  enumerable: true,\n  get: function () {\n    return provider_1.EAccountDeletionResponse;\n  }\n});\nObject.defineProperty(exports, \"EAccountImportResponse\", {\n  enumerable: true,\n  get: function () {\n    return provider_1.EAccountImportResponse;\n  }\n});\nObject.defineProperty(exports, \"Provider\", {\n  enumerable: true,\n  get: function () {\n    return provider_1.Provider;\n  }\n});\nvar MassaStationAccount_1 = require(\"./massaStation/MassaStationAccount\");\nObject.defineProperty(exports, \"MassaStationAccount\", {\n  enumerable: true,\n  get: function () {\n    return MassaStationAccount_1.MassaStationAccount;\n  }\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","MassaStationAccount","Provider","EAccountImportResponse","EAccountDeletionResponse","Account","registerProvider","providers","AvailableCommands","buffer_1","require","window","Buffer","Connector_1","Provider_1","MassaStationProvider_1","retry","timeout","pollInterval","Promise","resolve","provider","providerName","keys","connector","getWalletProviders","MASSA_STATION_PROVIDER_NAME","p","MassaStationProvider","push","length","setTimeout","then","name","id","MASSA_WINDOW_OBJECT","registerEvent","CustomEvent","detail","element","document","getElementById","dispatchEvent","account_1","enumerable","get","provider_1","MassaStationAccount_1"],"sources":["/Users/jwmdev/Development/github/massa/massa-sc-examples/age/react/node_modules/@massalabs/wallet-provider/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MassaStationAccount = exports.Provider = exports.EAccountImportResponse = exports.EAccountDeletionResponse = exports.Account = exports.registerProvider = exports.providers = exports.AvailableCommands = void 0;\n/** Polyfills */\nconst buffer_1 = require(\"buffer\");\n// Check if we are on browser\nif (typeof window !== 'undefined') {\n    window.Buffer = buffer_1.Buffer;\n}\nconst Connector_1 = require(\"./connector/Connector\");\nconst Provider_1 = require(\"./provider/Provider\");\nconst MassaStationProvider_1 = require(\"./massaStation/MassaStationProvider\");\nvar AvailableCommands;\n(function (AvailableCommands) {\n    AvailableCommands[\"ProviderListAccounts\"] = \"LIST_ACCOUNTS\";\n    AvailableCommands[\"ProviderDeleteAccount\"] = \"DELETE_ACCOUNT\";\n    AvailableCommands[\"ProviderImportAccount\"] = \"IMPORT_ACCOUNT\";\n    AvailableCommands[\"ProviderGetNodesUrls\"] = \"GET_NODES_URLS\";\n    AvailableCommands[\"AccountBalance\"] = \"ACCOUNT_BALANCE\";\n    AvailableCommands[\"AccountSign\"] = \"ACCOUNT_SIGN\";\n    AvailableCommands[\"ProviderGenerateNewAccount\"] = \"GENERATE_NEW_ACCOUNT\";\n    AvailableCommands[\"AccountSellRolls\"] = \"ACCOUNT_SELL_ROLLS\";\n    AvailableCommands[\"AccountBuyRolls\"] = \"ACCOUNT_BUY_ROLLS\";\n    AvailableCommands[\"AccountSendTransaction\"] = \"ACCOUNT_SEND_TRANSACTION\";\n    AvailableCommands[\"AccountCallSC\"] = \"ACCOUNT_CALL_SC\";\n})(AvailableCommands = exports.AvailableCommands || (exports.AvailableCommands = {}));\n/**\n * Get the list of providers that are available to interact with.\n *\n * @param retry - If true, will retry to get the list of providers if none are available.\n * @param pollInterval - The timeout in milliseconds to wait between retries. default is 2000ms.\n * @param timeout - The timeout in milliseconds to wait before giving up. default is 3000ms.\n *\n * @returns An array of providers.\n */\nasync function providers(retry = true, timeout = 3000, pollInterval = 500) {\n    if (timeout <= 0) {\n        return [];\n    }\n    return new Promise((resolve) => {\n        let provider = [];\n        for (const providerName of Object.keys(Connector_1.connector.getWalletProviders())) {\n            if (providerName === MassaStationProvider_1.MASSA_STATION_PROVIDER_NAME) {\n                const p = new MassaStationProvider_1.MassaStationProvider();\n                provider.push(p);\n            }\n            else {\n                const p = new Provider_1.Provider(providerName);\n                provider.push(p);\n            }\n        }\n        // If no providers are available, wait and try again\n        if (retry && provider.length === 0) {\n            setTimeout(() => {\n                providers(retry, timeout - pollInterval, pollInterval).then(resolve);\n            }, pollInterval);\n        }\n        else {\n            resolve(provider);\n        }\n    });\n}\nexports.providers = providers;\n/**\n * Manually register a provider to interact with.\n *\n * @param name - The name of the provider.\n * @param id - The id of the HTML element that is used to communicate with the provider.\n */\nfunction registerProvider(name, id = Connector_1.MASSA_WINDOW_OBJECT) {\n    const registerEvent = new CustomEvent('register', {\n        detail: { providerName: name },\n    });\n    const element = document.getElementById(id);\n    if (element) {\n        element.dispatchEvent(registerEvent);\n    }\n}\nexports.registerProvider = registerProvider;\nvar account_1 = require(\"./account\");\nObject.defineProperty(exports, \"Account\", { enumerable: true, get: function () { return account_1.Account; } });\nvar provider_1 = require(\"./provider\");\nObject.defineProperty(exports, \"EAccountDeletionResponse\", { enumerable: true, get: function () { return provider_1.EAccountDeletionResponse; } });\nObject.defineProperty(exports, \"EAccountImportResponse\", { enumerable: true, get: function () { return provider_1.EAccountImportResponse; } });\nObject.defineProperty(exports, \"Provider\", { enumerable: true, get: function () { return provider_1.Provider; } });\nvar MassaStationAccount_1 = require(\"./massaStation/MassaStationAccount\");\nObject.defineProperty(exports, \"MassaStationAccount\", { enumerable: true, get: function () { return MassaStationAccount_1.MassaStationAccount; } });\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}