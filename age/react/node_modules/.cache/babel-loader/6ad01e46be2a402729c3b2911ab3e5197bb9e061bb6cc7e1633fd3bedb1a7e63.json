{"ast":null,"code":"import { BLAKE2, SIGMA } from './_blake2.js';\nimport u64 from './_u64.js';\nimport { rotr, toBytes, wrapConstructorWithOpts, u32 } from './utils.js';\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19)\n// same as SHA-256\n// prettier-ignore\nexport const IV = new Uint32Array([0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19]);\n// Mixing function G splitted in two halfs\nfunction G1(a, b, c, d, x) {\n  a = a + b + x | 0;\n  d = rotr(d ^ a, 16);\n  c = c + d | 0;\n  b = rotr(b ^ c, 12);\n  return {\n    a,\n    b,\n    c,\n    d\n  };\n}\nfunction G2(a, b, c, d, x) {\n  a = a + b + x | 0;\n  d = rotr(d ^ a, 8);\n  c = c + d | 0;\n  b = rotr(b ^ c, 7);\n  return {\n    a,\n    b,\n    c,\n    d\n  };\n}\n// prettier-ignore\nexport function compress(s, offset, msg, rounds, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) {\n  let j = 0;\n  for (let i = 0; i < rounds; i++) {\n    ({\n      a: v0,\n      b: v4,\n      c: v8,\n      d: v12\n    } = G1(v0, v4, v8, v12, msg[offset + s[j++]]));\n    ({\n      a: v0,\n      b: v4,\n      c: v8,\n      d: v12\n    } = G2(v0, v4, v8, v12, msg[offset + s[j++]]));\n    ({\n      a: v1,\n      b: v5,\n      c: v9,\n      d: v13\n    } = G1(v1, v5, v9, v13, msg[offset + s[j++]]));\n    ({\n      a: v1,\n      b: v5,\n      c: v9,\n      d: v13\n    } = G2(v1, v5, v9, v13, msg[offset + s[j++]]));\n    ({\n      a: v2,\n      b: v6,\n      c: v10,\n      d: v14\n    } = G1(v2, v6, v10, v14, msg[offset + s[j++]]));\n    ({\n      a: v2,\n      b: v6,\n      c: v10,\n      d: v14\n    } = G2(v2, v6, v10, v14, msg[offset + s[j++]]));\n    ({\n      a: v3,\n      b: v7,\n      c: v11,\n      d: v15\n    } = G1(v3, v7, v11, v15, msg[offset + s[j++]]));\n    ({\n      a: v3,\n      b: v7,\n      c: v11,\n      d: v15\n    } = G2(v3, v7, v11, v15, msg[offset + s[j++]]));\n    ({\n      a: v0,\n      b: v5,\n      c: v10,\n      d: v15\n    } = G1(v0, v5, v10, v15, msg[offset + s[j++]]));\n    ({\n      a: v0,\n      b: v5,\n      c: v10,\n      d: v15\n    } = G2(v0, v5, v10, v15, msg[offset + s[j++]]));\n    ({\n      a: v1,\n      b: v6,\n      c: v11,\n      d: v12\n    } = G1(v1, v6, v11, v12, msg[offset + s[j++]]));\n    ({\n      a: v1,\n      b: v6,\n      c: v11,\n      d: v12\n    } = G2(v1, v6, v11, v12, msg[offset + s[j++]]));\n    ({\n      a: v2,\n      b: v7,\n      c: v8,\n      d: v13\n    } = G1(v2, v7, v8, v13, msg[offset + s[j++]]));\n    ({\n      a: v2,\n      b: v7,\n      c: v8,\n      d: v13\n    } = G2(v2, v7, v8, v13, msg[offset + s[j++]]));\n    ({\n      a: v3,\n      b: v4,\n      c: v9,\n      d: v14\n    } = G1(v3, v4, v9, v14, msg[offset + s[j++]]));\n    ({\n      a: v3,\n      b: v4,\n      c: v9,\n      d: v14\n    } = G2(v3, v4, v9, v14, msg[offset + s[j++]]));\n  }\n  return {\n    v0,\n    v1,\n    v2,\n    v3,\n    v4,\n    v5,\n    v6,\n    v7,\n    v8,\n    v9,\n    v10,\n    v11,\n    v12,\n    v13,\n    v14,\n    v15\n  };\n}\nclass BLAKE2s extends BLAKE2 {\n  constructor(opts = {}) {\n    super(64, opts.dkLen === undefined ? 32 : opts.dkLen, opts, 32, 8, 8);\n    // Internal state, same as SHA-256\n    this.v0 = IV[0] | 0;\n    this.v1 = IV[1] | 0;\n    this.v2 = IV[2] | 0;\n    this.v3 = IV[3] | 0;\n    this.v4 = IV[4] | 0;\n    this.v5 = IV[5] | 0;\n    this.v6 = IV[6] | 0;\n    this.v7 = IV[7] | 0;\n    const keyLength = opts.key ? opts.key.length : 0;\n    this.v0 ^= this.outputLen | keyLength << 8 | 0x01 << 16 | 0x01 << 24;\n    if (opts.salt) {\n      const salt = u32(toBytes(opts.salt));\n      this.v4 ^= salt[0];\n      this.v5 ^= salt[1];\n    }\n    if (opts.personalization) {\n      const pers = u32(toBytes(opts.personalization));\n      this.v6 ^= pers[0];\n      this.v7 ^= pers[1];\n    }\n    if (opts.key) {\n      // Pad to blockLen and update\n      const tmp = new Uint8Array(this.blockLen);\n      tmp.set(toBytes(opts.key));\n      this.update(tmp);\n    }\n  }\n  get() {\n    const {\n      v0,\n      v1,\n      v2,\n      v3,\n      v4,\n      v5,\n      v6,\n      v7\n    } = this;\n    return [v0, v1, v2, v3, v4, v5, v6, v7];\n  }\n  // prettier-ignore\n  set(v0, v1, v2, v3, v4, v5, v6, v7) {\n    this.v0 = v0 | 0;\n    this.v1 = v1 | 0;\n    this.v2 = v2 | 0;\n    this.v3 = v3 | 0;\n    this.v4 = v4 | 0;\n    this.v5 = v5 | 0;\n    this.v6 = v6 | 0;\n    this.v7 = v7 | 0;\n  }\n  compress(msg, offset, isLast) {\n    const {\n      h,\n      l\n    } = u64.fromBig(BigInt(this.length));\n    // prettier-ignore\n    const {\n      v0,\n      v1,\n      v2,\n      v3,\n      v4,\n      v5,\n      v6,\n      v7,\n      v8,\n      v9,\n      v10,\n      v11,\n      v12,\n      v13,\n      v14,\n      v15\n    } = compress(SIGMA, offset, msg, 10, this.v0, this.v1, this.v2, this.v3, this.v4, this.v5, this.v6, this.v7, IV[0], IV[1], IV[2], IV[3], l ^ IV[4], h ^ IV[5], isLast ? ~IV[6] : IV[6], IV[7]);\n    this.v0 ^= v0 ^ v8;\n    this.v1 ^= v1 ^ v9;\n    this.v2 ^= v2 ^ v10;\n    this.v3 ^= v3 ^ v11;\n    this.v4 ^= v4 ^ v12;\n    this.v5 ^= v5 ^ v13;\n    this.v6 ^= v6 ^ v14;\n    this.v7 ^= v7 ^ v15;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer32.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n/**\n * BLAKE2s - optimized for 32-bit platforms. JS doesn't have uint64, so it's faster than BLAKE2b.\n * @param msg - message that would be hashed\n * @param opts - dkLen, key, salt, personalization\n */\nexport const blake2s = wrapConstructorWithOpts(opts => new BLAKE2s(opts));","map":{"version":3,"names":["BLAKE2","SIGMA","u64","rotr","toBytes","wrapConstructorWithOpts","u32","IV","Uint32Array","G1","a","b","c","d","x","G2","compress","s","offset","msg","rounds","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","j","i","BLAKE2s","constructor","opts","dkLen","undefined","keyLength","key","length","outputLen","salt","personalization","pers","tmp","Uint8Array","blockLen","set","update","get","isLast","h","l","fromBig","BigInt","destroy","destroyed","buffer32","fill","blake2s"],"sources":["/Users/jwmdev/Development/github/massa/massa-sc-examples/age/react/node_modules/@noble/hashes/src/blake2s.ts"],"sourcesContent":["import { BLAKE2, BlakeOpts, SIGMA } from './_blake2.js';\nimport u64 from './_u64.js';\nimport { rotr, toBytes, wrapConstructorWithOpts, u32 } from './utils.js';\n\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19)\n// same as SHA-256\n// prettier-ignore\nexport const IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Mixing function G splitted in two halfs\nfunction G1(a: number, b: number, c: number, d: number, x: number) {\n  a = (a + b + x) | 0;\n  d = rotr(d ^ a, 16);\n  c = (c + d) | 0;\n  b = rotr(b ^ c, 12);\n  return { a, b, c, d };\n}\n\nfunction G2(a: number, b: number, c: number, d: number, x: number) {\n  a = (a + b + x) | 0;\n  d = rotr(d ^ a, 8);\n  c = (c + d) | 0;\n  b = rotr(b ^ c, 7);\n  return { a, b, c, d };\n}\n// prettier-ignore\nexport function compress(s: Uint8Array, offset: number, msg: Uint32Array, rounds: number,\n  v0: number, v1: number,  v2: number,  v3: number,  v4: number,  v5: number,  v6: number,  v7: number,\n  v8: number, v9: number, v10: number, v11: number, v12: number, v13: number, v14: number, v15: number,\n) {\n  let j = 0;\n  for (let i = 0; i < rounds; i++) {\n    ({ a: v0, b: v4, c: v8, d: v12 } = G1(v0, v4, v8, v12, msg[offset + s[j++]]));\n    ({ a: v0, b: v4, c: v8, d: v12 } = G2(v0, v4, v8, v12, msg[offset + s[j++]]));\n    ({ a: v1, b: v5, c: v9, d: v13 } = G1(v1, v5, v9, v13, msg[offset + s[j++]]));\n    ({ a: v1, b: v5, c: v9, d: v13 } = G2(v1, v5, v9, v13, msg[offset + s[j++]]));\n    ({ a: v2, b: v6, c: v10, d: v14 } = G1(v2, v6, v10, v14, msg[offset + s[j++]]));\n    ({ a: v2, b: v6, c: v10, d: v14 } = G2(v2, v6, v10, v14, msg[offset + s[j++]]));\n    ({ a: v3, b: v7, c: v11, d: v15 } = G1(v3, v7, v11, v15, msg[offset + s[j++]]));\n    ({ a: v3, b: v7, c: v11, d: v15 } = G2(v3, v7, v11, v15, msg[offset + s[j++]]));\n\n    ({ a: v0, b: v5, c: v10, d: v15 } = G1(v0, v5, v10, v15, msg[offset + s[j++]]));\n    ({ a: v0, b: v5, c: v10, d: v15 } = G2(v0, v5, v10, v15, msg[offset + s[j++]]));\n    ({ a: v1, b: v6, c: v11, d: v12 } = G1(v1, v6, v11, v12, msg[offset + s[j++]]));\n    ({ a: v1, b: v6, c: v11, d: v12 } = G2(v1, v6, v11, v12, msg[offset + s[j++]]));\n    ({ a: v2, b: v7, c: v8, d: v13 } = G1(v2, v7, v8, v13, msg[offset + s[j++]]));\n    ({ a: v2, b: v7, c: v8, d: v13 } = G2(v2, v7, v8, v13, msg[offset + s[j++]]));\n    ({ a: v3, b: v4, c: v9, d: v14 } = G1(v3, v4, v9, v14, msg[offset + s[j++]]));\n    ({ a: v3, b: v4, c: v9, d: v14 } = G2(v3, v4, v9, v14, msg[offset + s[j++]]));\n  }\n  return { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 };\n}\n\nclass BLAKE2s extends BLAKE2<BLAKE2s> {\n  // Internal state, same as SHA-256\n  private v0 = IV[0] | 0;\n  private v1 = IV[1] | 0;\n  private v2 = IV[2] | 0;\n  private v3 = IV[3] | 0;\n  private v4 = IV[4] | 0;\n  private v5 = IV[5] | 0;\n  private v6 = IV[6] | 0;\n  private v7 = IV[7] | 0;\n\n  constructor(opts: BlakeOpts = {}) {\n    super(64, opts.dkLen === undefined ? 32 : opts.dkLen, opts, 32, 8, 8);\n    const keyLength = opts.key ? opts.key.length : 0;\n    this.v0 ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n    if (opts.salt) {\n      const salt = u32(toBytes(opts.salt));\n      this.v4 ^= salt[0];\n      this.v5 ^= salt[1];\n    }\n    if (opts.personalization) {\n      const pers = u32(toBytes(opts.personalization));\n      this.v6 ^= pers[0];\n      this.v7 ^= pers[1];\n    }\n    if (opts.key) {\n      // Pad to blockLen and update\n      const tmp = new Uint8Array(this.blockLen);\n      tmp.set(toBytes(opts.key));\n      this.update(tmp);\n    }\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { v0, v1, v2, v3, v4, v5, v6, v7 } = this;\n    return [v0, v1, v2, v3, v4, v5, v6, v7];\n  }\n  // prettier-ignore\n  protected set(\n    v0: number, v1: number, v2: number, v3: number, v4: number, v5: number, v6: number, v7: number\n  ) {\n    this.v0 = v0 | 0;\n    this.v1 = v1 | 0;\n    this.v2 = v2 | 0;\n    this.v3 = v3 | 0;\n    this.v4 = v4 | 0;\n    this.v5 = v5 | 0;\n    this.v6 = v6 | 0;\n    this.v7 = v7 | 0;\n  }\n  protected compress(msg: Uint32Array, offset: number, isLast: boolean) {\n    const { h, l } = u64.fromBig(BigInt(this.length));\n    // prettier-ignore\n    const { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 } =\n      compress(\n        SIGMA, offset, msg, 10,\n        this.v0, this.v1, this.v2, this.v3, this.v4, this.v5, this.v6, this.v7,\n        IV[0], IV[1], IV[2], IV[3], l ^ IV[4], h ^ IV[5], isLast ? ~IV[6] : IV[6], IV[7]\n      );\n    this.v0 ^= v0 ^ v8;\n    this.v1 ^= v1 ^ v9;\n    this.v2 ^= v2 ^ v10;\n    this.v3 ^= v3 ^ v11;\n    this.v4 ^= v4 ^ v12;\n    this.v5 ^= v5 ^ v13;\n    this.v6 ^= v6 ^ v14;\n    this.v7 ^= v7 ^ v15;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer32.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * BLAKE2s - optimized for 32-bit platforms. JS doesn't have uint64, so it's faster than BLAKE2b.\n * @param msg - message that would be hashed\n * @param opts - dkLen, key, salt, personalization\n */\nexport const blake2s = wrapConstructorWithOpts<BLAKE2s, BlakeOpts>((opts) => new BLAKE2s(opts));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}