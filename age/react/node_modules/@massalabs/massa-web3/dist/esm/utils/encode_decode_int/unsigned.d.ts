/**
 * @module unsigned.ts
 *
 * This module provides functions to encode and decode unsigned integers,
 * using Varint which is a more compact binary representation of them.
 */
/**
 * Returns the number of bytes required to store the number in a varint.
 *
 * @param value - The number to encode.
 * @returns The number of bytes required to store the number.
 */
export declare function encodingLength(value: bigint): number;
/**
 * Encodes a big number as a varint.
 *
 * @param i - The big number to encode.
 * @param buffer - The buffer to write the varint to (optional).
 * @param byteOffset - The offset in the buffer to start writing at (optional) (default: 0).
 * @returns The buffer that was written to.
 */
export declare function encode(i: bigint, buffer?: ArrayBuffer, byteOffset?: number): Uint8Array;
/**
 * Decodes a varint as a big number.
 *
 * @param data - The data to decode.
 * @param offset - The offset in the data to start reading at (optional) (default: 0).
 * @returns The decoded big number.
 */
export declare function decode(data: Uint8Array, offset?: number): bigint;
